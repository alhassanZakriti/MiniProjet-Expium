import {useState, useEffect } from "react"
import React from "react"
import axios from "axios";

import { UserContext } from './contexts/UserContext'; // Path to your UserContext file
import { ProfilePicContext } from './contexts/ProfilePicContext'; // Path to your ProfilePicContext file

import {Routes, Route} from 'react-router-dom';
import SigninForm from './_auth/forms/SigninForm';
import { Home } from './_root/pages';
import SignupForm from './_auth/forms/SignupForm';
import AuthLayout from './_auth/AuthLayout';
import RootLayout from './_root/RootLayout';
import Activities from './_root/pages/Activities';
import Chat from './_root/pages/Chat';
import Friends from './_root/pages/Friends';
import Profile from './_root/pages/Profile';
import Preloader from "./components/Preloader";
import CreatePost from "./_root/pages/CreatePost";
import InsideChat from "./_root/pages/InsideChat";
import Settings from "./_root/pages/Settings";
import Search from "./_root/pages/Search";
import InsidePost from "./_root/pages/InsidePost";
import { set } from "react-hook-form";



export interface User {
  name: string;
  username: string;
  password: string;
  email: string;
  picture: string;
  followers: number;
  following: number;
  
}



const App = () => {
  const [isLoading, setIsLoading] = useState(true);

  const [user, setUser] = useState<User | null>(null);

  const username = localStorage.getItem("myUserName");
  const token = localStorage.getItem("myToken");
  const [profilePic, setProfilePic] = useState<string | null>("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");
  useEffect(() => {
    // Fetch user data using Axios
    axios.get(`http://localhost:8080/user/user-info?username=${username}`,{
      headers: {
        'Authorization': `Bearer ${token} `, // Replace with your actual bearer token
        'Content-Type': 'application/json', // Or any other required header
        // Add any other necessary headers
      }
    } )
      .then((response) => {
        setUser(response.data);
        
      })
      .catch((error) => {
        console.error(error);
      });
  }, []);
  console.log(user);


  
  React.useEffect(() => {
    // const User:{name: string, username: string, password: string, email: string, followers:number, following: number }= {
    //   name: "Al Hassan ZAKRITI",
    //   username: "alhassan.zakriti",
    //   password: "123456",
    //   email: "zakriti.alhassan1@gmail.com",
    //   followers: 122,
    //   following: 124,
    // };
  
    // setUser(User);
  
    // Simulate loading pages
    setTimeout(() => {
      setIsLoading(false);
    }, 2000);
  }, []);
  return (
    <ProfilePicContext.Provider value={{ profilePic, setProfilePic }}>
    <UserContext.Provider value={{ user, setUser }}>
      <div>
        
        {isLoading && <Preloader />}
        <main>
          
          <Routes>

              {/*Public Routes */}

              <Route element={<AuthLayout />}>
                  <Route path='/sign-in' element={<SigninForm />} />
                  <Route path='/sign-up' element={<SignupForm />} />
              </Route>
              

              {/*Private Routes */}
              <Route element={<RootLayout />}>
                  <Route index element={<Home />} />
                  <Route path='/activities' element={<Activities />} />
                  <Route path='/add-post' element={<CreatePost />} />
                  <Route path='/chat' element={<Chat />} />
                  <Route path='/chat/message/:roomId' element={<InsideChat />} />
                  <Route path='/friends' element={<Friends />} />
                  <Route path='/profile/:userId' element={<Profile />} />
                  <Route path='/settings' element={<Settings />} />
                  <Route path='/search' element={<Search />} />
                  <Route path='/post/:postId' element={<InsidePost />} />
              </Route>
              
          </Routes>
        </main>
      </div>
    </UserContext.Provider>
    </ProfilePicContext.Provider>
  )
}

export default App
