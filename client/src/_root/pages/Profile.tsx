import { Link, useParams } from 'react-router-dom'
import profile from '../../assets/profile.png'
import Mypic from "../../assets/Mypic.jpg"
import bg from "../../assets/bg.jpg"
import Post from '../../components/Post'
import { useContext, useEffect, useState } from 'react'
import { UserContext } from '../../contexts/UserContext'
import axios from 'axios'
import profilepre from "../../assets/profilepre.svg"
import { set } from 'react-hook-form'

const Profile = () => {

  const userId = useParams();
  const username =  userId.userId;


  const { user } = useContext(UserContext);
  const [isLoading, setIsLoading] = useState(true);
  const [error, setError] = useState(null);
  const [posts, setPosts] = useState([]);
  const [userProfile, setUserProfile] = useState(null);


  useEffect(() => {
    
    axios
      .get(`http://localhost:8080/user/post/${username}/posts`, {
        
        headers: {
          Authorization: `Bearer ${localStorage.getItem("myToken")}`
        },
      })
      .then((res) => {
        setPosts(res.data);
        console.log(res.data);
      })
      .catch((err) => {
        setError(err);
      })
      .finally(() => {
        setIsLoading(false);
        console.log("done");
      });

    axios
      .get(`http://localhost:8080/user/user-info?username=${username}`, {
          
          headers: {
            Authorization: `Bearer ${localStorage.getItem("myToken")}`
          },
        })
        .then((res) => {
          setUserProfile(res.data);
          console.log(res.data);
        })
        .catch((err) => {
          setError(err);
        })
        
        
    
      
  }, []);


  let profilePic="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"
  return (
    <div className='profile content-area center'>
      {
        isLoading ? (<img src={profilepre}  className='preloader-pages'/>) :
        (<div>
              <div className="pic-name">
            <div className="img-follow">
              <img className='profile-picture' src={"data:image/png;base64,"+profilePic} alt="porfile-picture" />
              <Link to="/settings" className='secondary-btn'>Edit your profile</Link>
            </div>
            <div className="name-with-user">
              <div className="flex-name-follow">
                <div className="namer">
                  <h3>{(userProfile===null)? "":userProfile.name}</h3>
                  <p className='user-area'>@{(userProfile===null)? "":userProfile.username}</p>
                </div>
              </div>
              

            </div>
            <div className="posts">
              <div className="btns">
                <button>My posts</button>
                {/* <button>Saved</button> */}
              </div>
                {isLoading? (<div className="empty-page">Loading...</div>):("")}
                {error? (<div className="empty-page">There are no posts yet click above to create one!</div>):(posts.map((post) => (
                  <Post
                    profilePic={(post.profilePicture)?(post.profilePicture):(profilePic)}
                    firstName={post.name}
                    lastName=""
                    ago={post.timeAgo}
                    username={post.username}
                    caption={post.content}
                    isImage={(post.postImage)? "yes":"no"}
                    {...(post.postImage)? {thisImage: post.postImage} : ""}
                    
                  />
                )))}
              </div>
          </div>
        </div>)
      }
    </div>
  )
}

export default Profile
